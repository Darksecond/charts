apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "pi-hole.labels" . | nindent 4 }}
  name: {{ include "pi-hole.fullname" . }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "pi-hole.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pi-hole.selectorLabels" . | nindent 8 }}
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - 127.0.0.1
        - 1.1.1.1
      containers:
      - image: "pihole/pihole:v{{ .Chart.AppVersion }}"
        name: pi-hole
        ports:
        - name: http
          containerPort: 80
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: dns-tcp
          containerPort: 53
          protocol: TCP
          # There is also 443/tcp, 67/udp
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: /admin.index.php
            port: http
        readinessProbe:
          httpGet:
            path: /admin.index.php
            port: http
        volumeMounts:
        - name: config
          subPath: pihole
          mountPath: /etc/pihole/
        - name: config
          subPath: dnsmasq
          mountPath: /etc/dnsmasq.d/
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: DNS1
          value: {{ .Values.dns1 }}
        - name: DNS2
          value: {{ .Values.dns2 }}
      volumes:
      - name: config
{{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "pi-hole.fullname" .) }}
{{- else }}
        emptyDir: {}
{{- end -}}